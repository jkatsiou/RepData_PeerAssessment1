swirl()
bye()
swirl()
head(airquality)
xyplot(Ozone~Wind,data=airquality)
xyplot(Ozone~Wind,data=airquality,col="red,pch=8,main="Big Apple Data")
xyplot(Ozone~Wind,data=airquality,col="red",pch=8,main="Big Apple Data")
xyplot(Ozone~Wind,data=airquality,pch=8,col="red",main="Big Apple Data")
xyplot(Ozone~Wind | as.factor(Month),data=airquality)
xyplot(Ozone~Wind | as.factor(Month),data=airquality, layout=c(5,1))
xyplot(Ozone~Wind | Month,data=airquality, layout=c(5,1))
p <- xyplot(Ozone~Wind,data=airquality)
p
names(p)
mynames[myfull]
p[["formula"]]
p[["x.limits]]
p[["x.limits"]]
table(f)
xyplot(x~y|flayout=c(2,1))
xyplot(x~y|f,layout=c(2,1))
xyplot(y~x|f,layout=c(2,1))
v1
v2
myedit("plot1.R")
source("plot1.R",local=TRUE)
source(pathtofile("plot1.R"),local=TRUE)
myedit("plot2.R")
source(pathtofile("plot2.R"),local=TRUE)
str(diamond)
str(diamonds)
table(diamond$color)
table(diamonds$color)
table(diamonds$color,diamonds$cut)
myedit("myLables.R")
myedit("myLabels.R")
source(pathtofile("myLabels.R"),local=TRUE)
xyplot(price~carat | color * cut, data=diamonds, strip = FALSE, pch = 20, xlab= myxlab, ylab = myylab,main=mymain)
xyplot(price~carat | color * cut, data=diamonds, pch = 20, xlab= myxlab, ylab = myylab,main=mymain)
bye()
swirl()
bye()
swirl()
sample(colors())
sample(colors(),10)
pal <- corolRamp("red,"blue"")
pal <- corolRamp("red,"blue")
pal <- corolRamp(c("red,"blue"))
pal <- colorRamp(c("red,"blue"))
pal <- colorRamp(c("red","blue"))
pal(0)
pal(1)
pal(seq(0,1,len=6))
p1 <- colorRampPallete(c("red","blue"))
p1 <- colorRampPalette(c("red","blue"))
p1
p1(2)
p1(6)
0xcc
p2 <-colorRampPalette(c("red","yellow")
)
p2
p2(2)
p2(10)
showMe(p1(20))
showMe(p2(20))
showMe(p2(2))
p1
?rgb
p3 <- colorRampPalette(c("blue","green"),alpha=.5)
p3(5)
plot(x,y,pch=19,col=rgb(0,.5,.5))
plot(x,y,pch=19,col=rgb(0,.5,.5,.3))
cols <- brewer.pal(3,"BuGn")
shoeMe(cols)
showMe(cols)
pal <- colorRampPalette(cols)
showMe(pal(3))
showMe(pal(20))
image(volcano, col=pal(20))
image(volcano, col=p1(20))
library(swirl)
swirl()
bye()
swirl()
str(mpg)
qplot(displ,hwy,data=mpg)
bye()
swirl()
str(mpg)
qplot(displ,hwy,data=mpg)
play()
nxt()
qplot(displ,hwy,data=mpg)
bye()
swirl()
qplot(displ,hwy,data=mpg)
bue()
swirl()
qplot(displ,hwy,data=mpg)
bye()
swirl()
str(mpg)
qplot(displ,hwy,mpg)
qplot(displ,hwy,data=mpg)
ls()
nxt()
fgf
qplot(displ,hwy,data=mpg)
bye()
swirl()
str(mpg)
jhmhmh
qplot(displ,hwy,data=mpg)
?qplot
bye()
swirl()
bye()
swirl()
qplot(displ, hwy, data = mpg, geom = c("point","smooth")
)
qplot(displ, hwy, data = mpg, geom = c("point","smooth"))
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
str(BodyWeight)
m <- xyplot(weight ~ Time | Diet, BodyWeight)
class(m)
?lpoints
library(Datasets)
library(datasets)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
?par
data(airquality)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(ggplot)
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
?geom
library(ggplot2movies)
installpackages("ggplot2movies")
installpackage("ggplot2movies")
install.packages("ggplot2movies")
library(ggplot2movies)
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies) + stats_smooth("loess")
?llines
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
library(swirl)
swirl()
bye()
swirl()
dim(pm0)
head(pm0)
cnames
cnames <- strsplit(cnames,"|",fixed=TRUE)
cnames
names(pm0) <- make.names(cnames[1][wcol])
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
x0 <- pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
x <- pm1$Sample.Value
x1 <- pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0,x1)
boxplot(log10(x0),log10(x1))
negative <- x1<0
sum(negative,na.rm=TRUE)
mean(negative,na.rm=TRUE)
dates <- pm1$Date
str(dates)
dates <- as.Date(as.Character(pm1$Date),Y%m%d)
dates <- as.Date(as.character(pm1$Date),Y%m%d)
dates <- as.Date(as.character(pm1$Date),%Y%m%d)
dates <- as.Date(as.character(pm1$Date), "%Y%m%d")
dates <- as.Date(as.character(dates), "%Y%m%d")
head(dates)
hist(dates[negative],"month")
str(site0)
both <- intersect(site0,site1)
both
head(pm0)
cnt0 <- subset(pm0,State.Code == 36 & )
cnt0 <- subset(pm0,State.Code == 36 & countysite  %in% both)
cnt0 <- subset(pm0,State.Code == 36 & county.site  %in% both)
cnt1 <- subset(pm1,State.Code == 36 & county.site  %in% both)
sapply(split(cnt0, cnt0$county.site), nrow)
sapply(split(cnt1, cnt1$county.site), nrow)
pm0sub <- subset(cnt0, County.Code == 63 & Site.Id = 2008)
pm0sub <- subset(cnt0, County.Code == 63 & Site.Id == 2008)
pm0sub <- subset(cnt0, County.Code == 63 & Site.ID == 2008)
pm1sub <- subset(cnt1, County.Code == 63 & Site.ID == 2008)
x0sub <- pm0sub$Sampe.Value
x0sub <- pm0sub$Sample.Value
x1sub <- pm1sub$Sample.Value
dates0 <- as.Date(as.character(pm0sub$Date),"%Y%m%d")
dates1 <- as.Date(as.character(pm1sub$Date),"%Y%m%d")
par(mfrow=c(1,2),mar=c(4,4,2,1))
plot(dates0,x0sub,pch=20)
abline(median(x0sub,na.rm=TRUE),lwd=2)
median(x0sub, na.rm=TRUE)
median(h=x0sub, na.rm=TRUE)
abline(h=median(x0sub,na.rm=TRUE),lwd=2)
plot(dates1,x1sub,pch=20)
abline(h=median(x1sub,na.rm=TRUE),lwd=2)
rng <- range(x0sub,x1subna.rm=TRUE)
rng <- range(x0sub,x1sub,na.rm=TRUE)
rng
mn0 <- with(pm0,tapply(Sample.Value,Stae.Code,mean,na.rm=TRUE))
mn0 <- with(pm0,tapply(Sample.Value,State.Code,mean,na.rm=TRUE))
str(mn0)
mn1 <- with(pm1,tapply(Sample.Value,State.Code,mean,na.rm=TRUE))
str(mn1)
summary(mn0)
summary(mn1)
d0 <- data.frame(state=names(nm0),mean=mn0)
d0 <- data.frame(state=names(mn0),mean=mn0)
d1 <- data.frame(state=names(mn1),mean=mn1)
mrg <- merge(d0,d1,by="state")
dim(mrg)
head(mrg)
with(mrg,plot(rep(1,52),mrg[,2]),xlim=c(.5,2.5)
)
with(mrg,plot(rep(1,52),mrg[,2],xlim=c(.5,2.5)))
with(mrg,plot(rep(2,52),mrg[,3],xlim=c(.5,2.5)))
with(mrg,plot(rep(2,52),mrg[,3]))
with(mrg,plot(rep(1,52),mrg[,2],xlim=c(.5,2.5)))
with(mrg,points(rep(2,52),mrg[,3]))
segments(1,mrg[,2],2,mrg[,3])
segments(rep(1,52),mrg[,2],rep(2,52),mrg[,3])
mrg[mrg$mean.x<mrg$mean.y]
mrg[mrg$mean.x< mrg$mean.y,]
library(knitr)
knit2html("PA1_template.rmd")
knit2html("PA1_template.rmd")
knit2html("PA1_template.rmd")
knit2html("PA1_template.rmd")
knit2html("PA1_template.rmd")
knit2html("PA1_template.rmd")
